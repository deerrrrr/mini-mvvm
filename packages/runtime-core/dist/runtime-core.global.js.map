{"version":3,"file":"runtime-core.global.js","sources":["../../shared/src/index.ts","../src/vnode.ts","../src/apiCreateApp.ts","../src/component.ts","../src/render.ts"],"sourcesContent":["// 公共方法\r\nexport function isObject(target) {\r\n  return typeof target === 'object' && target != null\r\n}\r\n// 合并对象\r\nexport const extend = Object.assign\r\n// 判断\r\nexport const isArray = Array.isArray\r\nexport const isFunction = (val) => typeof val === 'function'\r\nexport const isNumber = (val) => typeof val === 'number'\r\nexport const isString = (val) => typeof val === 'string'\r\n\r\n// 判断数组的key是不是整数\r\nexport const isIntegerKey = (key) => parseInt(key) + '' === key\r\n// 对象中是否有这个属性\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty\r\nexport const hasOwn = (\r\n  val: object,\r\n  key: string | symbol\r\n): key is keyof typeof val => hasOwnProperty.call(val, key)\r\n\r\nexport const hasChange = (val, oldVal) => val !== oldVal\r\n\r\nexport * from './shapeFlag'\r\n","import { isString, isObject, ShapeFlags, isArray } from '@vue/shared'\r\n\r\n// 创建vnode 和h函数一样\r\nexport const createVnode = (type, props, children = null) => {\r\n  // 区分组件还是元素\r\n  let shapeFlag = isString(type)\r\n    ? ShapeFlags.ELEMENT\r\n    : isObject(type)\r\n    ? ShapeFlags.STATEFUL_COMPONENT\r\n    : 0\r\n  const vnode = {\r\n    _v_isVnode: true, //是一个vnode节点\r\n    type,\r\n    props,\r\n    children,\r\n    key: props && props.key, //diff算法\r\n    el: null, //和真实的元素对应\r\n    component:{},//实例对象\r\n    shapeFlag,\r\n  }\r\n  // 孩子标识\r\n  normalizeChildren(vnode, children)\r\n  return vnode\r\n}\r\n\r\nfunction normalizeChildren(vnode, children) {\r\n  let type = 0\r\n  if (children == null) {\r\n  } else if (isArray(children)) {\r\n    type = ShapeFlags.ARRAY_CHILDREN\r\n  } else {\r\n    type = ShapeFlags.TEXT_CHILDREN\r\n  }\r\n  vnode.shapeFlag = vnode.shapeFlag | type\r\n}\r\n","import {createVnode} from \"./vnode\"\r\nexport function apiCreateApp(render) {\r\n  return function createApp(rootComponent, rootProps) {\r\n    // 说明组件和属性\r\n    let app = {\r\n      _component: rootComponent,\r\n      _props: rootProps,\r\n      _container:null,\r\n      mount(container) {\r\n        // 挂载位置\r\n        let vnode = createVnode(rootComponent,rootProps)\r\n        render(vnode, container)\r\n        app._container = container\r\n      },\r\n    }\r\n    return app\r\n  }\r\n}\r\n","import {ShapeFlags} from '@vue/shared'\r\nexport const createComponentInstance = (vnode) => {\r\n  // 就是一个对象\r\n  const instance = {\r\n    vnode,\r\n    type:vnode.type,//组件的类型\r\n    props: {},//组件的属性\r\n    attrs: {},\r\n    setupState: {},//setup返回值\r\n    ctx: {},//代理\r\n    proxy: {},\r\n    isMounted:false,//是否挂载\r\n  }\r\n  instance.ctx = {_:instance}\r\n  return instance\r\n}\r\nexport const setupComponent = (instance) => {\r\n  // 设置值\r\n  const {props,children} = instance.vnode\r\n  // 根据props解析到组件实例上\r\n  instance.props = props\r\n  instance.children = children //插槽\r\n  // 判断组件有没有setup\r\n  let shapeFlag = instance.vnode.shapeFlag&&ShapeFlags.STATEFUL_COMPONENT\r\n  if(shapeFlag){\r\n    setupStateComponent(instance)\r\n  }\r\n}\r\n\r\nfunction setupStateComponent(instance){\r\n  let component = instance.type\r\n  let {setup} = component\r\n  setup()\r\n}\r\n\r\nexport const setupRenderEffect = () => {\r\n  \r\n}","import { ShapeFlags } from '@vue/shared'\r\nimport { apiCreateApp } from './apiCreateApp'\r\nimport { createComponentInstance, setupComponent,setupRenderEffect } from './component'\r\nexport function createRender(renderOptionDom) {\r\n  // 实现渲染\r\n  const mountComponent = (InitialVnode, container) => {\r\n    // 组件渲染\r\n    // 组件实例\r\n    const instance = (InitialVnode.component =\r\n      createComponentInstance(InitialVnode))\r\n    // 解析数据到这个实现对象中\r\n    setupComponent(instance)\r\n    // 创建effect让render函数执行\r\n    setupRenderEffect()\r\n  }\r\n  const processComponent = (n1, n2, container) => {\r\n    if (n1 == null) {\r\n      // 第一次\r\n      mountComponent(n2, container)\r\n    } else {\r\n      //更新\r\n    }\r\n  }\r\n  const patch = (n1, n2, container) => {\r\n    // 针对不同的类型\r\n    let { shapeFlag } = n2\r\n    if (shapeFlag & ShapeFlags.ELEMENT) {\r\n      // 元素\r\n    } else if (shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\r\n      // 组件\r\n      processComponent(n1, n2, container)\r\n    }\r\n  }\r\n  let render = (vnode, container) => {\r\n    // 组件初始化\r\n    patch(null, vnode, container) //第一次\r\n  }\r\n  return {\r\n    createApp: apiCreateApp(render), // vnode\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}